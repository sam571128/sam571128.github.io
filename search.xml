<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IOI 2014 Wall &amp; IOI 2005 Mountain</title>
    <url>/2020/09/27/IOI-2014-Wall-IOI-2005-Mountain/</url>
    <content><![CDATA[<h1 id="IOI-2014-Wall-amp-IOI-2005-Mountain"><a href="#IOI-2014-Wall-amp-IOI-2005-Mountain" class="headerlink" title="IOI 2014 Wall &amp; IOI 2005 Mountain"></a>IOI 2014 Wall &amp; IOI 2005 Mountain</h1><p>上週瘋狂的在解Codeforces EDU的線段樹題目<br>其中有各式各樣的線段樹題目 而這兩題剛好是過往的IOI題目 所以來紀錄一下解法<br><a id="more"></a></p>
<h3 id="IOI-2014-Wall"><a href="#IOI-2014-Wall" class="headerlink" title="IOI 2014 Wall"></a>IOI 2014 Wall</h3><p>題目：<br>中文：<br> <a href="http://ioi.te.lv/locations/ioi14/contest/day1/wall/twn.pdf">http://ioi.te.lv/locations/ioi14/contest/day1/wall/twn.pdf</a><br>英文：<br> <a href="http://ioi.te.lv/locations/ioi14/contest/day1/wall/wall.pdf">http://ioi.te.lv/locations/ioi14/contest/day1/wall/wall.pdf</a></p>
<p>總而言之，今天有個人建造磚牆，一開始整個牆都沒有任何磚塊，他會進行 $k$ 次操作，<br>每次進行第 $t$ 種操作 給予區間 $[l,r]$ 以及 $h$<br>操作共有兩種</p>
<p>（一）把 $[l,r]$ 高度不到 $h$ 的牆全部提升到 $h$<br>（二）把 $[l,r]$ 高度高於 $h$ 的牆全部降低為 $h$</p>
<p>問最後每一面牆的高度為何？</p>
<p>這題用到區間修改 不過只有最後去進行每個點的單點詢問<br>我們可以想想看要如何去進行修改</p>
<p>我們給予線段樹上的每個節點兩個標記 分別紀錄提昇與降低的高度<br>在這裡將他們命名為 $up$, $down$<br>預設先將$up=0$, $down = INF$（$INF$的數值只要大於$100000$就可以了）</p>
<p>在進行區間更新時</p>
<p>當我們要進行提昇的動作<br>修改節點的$up=max(up,h)$, $down=max(down,h)$</p>
<p>而相反的 要降低高度時<br>修改節點的$up=min(up,h)$, $down=min(down,h)$</p>
<p>這樣我們對於節點的標記就完成了</p>
<p>而當我們要下推節點的標記時 我們會有四種動作（$up’,down’$為我們要下推的標記）</p>
<p>$1.up=max(up,up’)$<br>$2.up=min(up,down’)$<br>$3.down=max(down,up’)$<br>$4.down=min(down,down’)$</p>
<p>仔細想一下 這四種操作分別能夠在提昇與降低時更新節點的數值<br>而最後就可以輸出所有的葉節點了</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> up = <span class="number">0</span>, down = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line">	node()&#123;&#125;</span><br><span class="line">&#125; d[<span class="number">4</span>*N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">apply</span><span class="params">(<span class="keyword">int</span> ind, <span class="keyword">int</span> up, <span class="keyword">int</span> down)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(ind&gt;=<span class="number">0</span>&amp;&amp;ind&lt;<span class="number">4</span>*N)&#123;</span><br><span class="line">		d[ind].down = min(d[ind].down,down);</span><br><span class="line">		d[ind].down = max(d[ind].down,up);</span><br><span class="line">		d[ind].up = max(d[ind].up,up);</span><br><span class="line">		d[ind].up = min(d[ind].up,down);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">range_modify</span><span class="params">(<span class="keyword">int</span> mode, <span class="keyword">int</span> ml, <span class="keyword">int</span> mr, <span class="keyword">int</span> val, <span class="keyword">int</span> ind = <span class="number">1</span>, <span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> r = N<span class="number">-1</span>)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(ml&gt;r||mr&lt;l) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">if</span>(ml&lt;=l&amp;&amp;mr&gt;=r)&#123;</span><br><span class="line">		<span class="keyword">if</span>(mode)&#123;</span><br><span class="line">			d[ind].down = min(d[ind].down,val);</span><br><span class="line">			d[ind].up = min(d[ind].up,val);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			d[ind].down = max(d[ind].down,val);</span><br><span class="line">			d[ind].up = max(d[ind].up,val);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">	apply(ind&lt;&lt;<span class="number">1</span>,d[ind].up,d[ind].down);</span><br><span class="line">	apply(ind&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,d[ind].up,d[ind].down);</span><br><span class="line">	d[ind].up = <span class="number">0</span>, d[ind].down = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line">	range_modify(mode,ml,mr,val,ind&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">	range_modify(mode,ml,mr,val,ind&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> ind, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		<span class="keyword">if</span>(l!=n) <span class="built_in">cout</span> &lt;&lt; min(d[ind].up,d[ind].down) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	apply(ind&lt;&lt;<span class="number">1</span>,d[ind].up,d[ind].down);</span><br><span class="line">	apply(ind&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,d[ind].up,d[ind].down);</span><br><span class="line">	d[ind].up = <span class="number">0</span>, d[ind].down = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">	query(ind&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">	query(ind&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">while</span>(k--)&#123;</span><br><span class="line">		<span class="keyword">int</span> mode,l,r,val;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; mode &gt;&gt; l &gt;&gt; r &gt;&gt; val;</span><br><span class="line">		range_modify(mode<span class="number">-1</span>,l,r,val,<span class="number">1</span>,<span class="number">0</span>,n);</span><br><span class="line">	&#125;</span><br><span class="line">	query(<span class="number">1</span>,<span class="number">0</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="IOI-2005-Mountain"><a href="#IOI-2005-Mountain" class="headerlink" title="IOI 2005 Mountain"></a>IOI 2005 Mountain</h3><p>題目：<br>英文：<a href="http://ioi.te.lv/locations/ioi05/contest/day1/mou/mou.pdf">http://ioi.te.lv/locations/ioi05/contest/day1/mou/mou.pdf</a></p>
<p>這題的意思是說有 $n$ 條鐵路軌道 每個火車最高只能爬到 $h$ 的高度<br>他會給予很多次修改鐵路上升的幅度以及每一台火車所能爬到的高度<br>問火車能爬完幾條鐵路</p>
<p>這題其實還滿簡單的 不過要注意的是 $n$ 的範圍 $1&lt;n&lt;10^9$<br>很明顯需要使用動態開點的線段樹</p>
<p>一開始看到這題時 因為Codeforces前面的練習題有「區間加等差數列」還有「第一個大於X的元素」<br>看到時就馬上刻了一棵超級毒瘤的線段樹<br>不過仔細想想 這題根本沒原本想的那麼難</p>
<p>這題需要的只是一棵區間加值的線段樹 然後找到總和大於X的第一個元素</p>
<p>要找大於X的元素時 我們會做的是維護區間元素的最大值<br>所以換成找總和時 則是在每個節點維護區間總和的最大值<br>在這裡我稱他為$mx$</p>
<p>而要維護總和的最大值<br>我們只需要在區間更新時 順便更新每個節點mx的值</p>
<p>$mx=max(l<em>{mx},l</em>{sum}+r_{mx})$</p>
<p>附上我的程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	node *lc, *rc;</span><br><span class="line">	<span class="keyword">int</span> l, r, sum, lz, mx;</span><br><span class="line">	node():lc(<span class="literal">NULL</span>), rc(<span class="literal">NULL</span>), l(<span class="number">0</span>), r(N), sum(<span class="number">0</span>), lz(-INF), mx(<span class="number">0</span>)&#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ext</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(lc==<span class="literal">NULL</span>)&#123;</span><br><span class="line">			lc = <span class="keyword">new</span> node();</span><br><span class="line">			rc = <span class="keyword">new</span> node();</span><br><span class="line">			lc-&gt;l = l, lc-&gt;r = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">			rc-&gt;l = (l+r&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>, rc-&gt;r = r;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">apply</span><span class="params">(node *&amp;t)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t-&gt;l!=t-&gt;r) t-&gt;ext();</span><br><span class="line">	<span class="keyword">if</span>(t-&gt;lz&gt;-INF)&#123;</span><br><span class="line">		t-&gt;sum = t-&gt;mx = (t-&gt;r-t-&gt;l+<span class="number">1</span>)*t-&gt;lz;</span><br><span class="line">		<span class="keyword">if</span>(t-&gt;l!=t-&gt;r)&#123;</span><br><span class="line">			t-&gt;lc-&gt;lz = t-&gt;lz;</span><br><span class="line">			t-&gt;rc-&gt;lz = t-&gt;lz;</span><br><span class="line">		&#125;</span><br><span class="line">		t-&gt;lz = -INF;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(node *&amp;t, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">	apply(t);</span><br><span class="line">	<span class="keyword">if</span>(t-&gt;l &gt; r || t-&gt;r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">if</span>(t-&gt;l &gt;= l &amp;&amp; t-&gt;r &lt;= r)&#123;</span><br><span class="line">		t-&gt;sum = t-&gt;mx = (t-&gt;r-t-&gt;l+<span class="number">1</span>)*val;</span><br><span class="line">		<span class="keyword">if</span>(t-&gt;l!=t-&gt;r)&#123;</span><br><span class="line">			t-&gt;ext();</span><br><span class="line">			t-&gt;lc-&gt;lz = val;</span><br><span class="line">			t-&gt;rc-&gt;lz = val;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	t-&gt;ext();</span><br><span class="line">	modify(t-&gt;lc,l,r,val);</span><br><span class="line">	modify(t-&gt;rc,l,r,val);</span><br><span class="line">	t-&gt;sum = t-&gt;lc-&gt;sum + t-&gt;rc-&gt;sum;</span><br><span class="line">	t-&gt;mx = max(t-&gt;lc-&gt;mx, t-&gt;lc-&gt;sum + t-&gt;rc-&gt;mx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(node *&amp;t, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">	apply(t);</span><br><span class="line">	<span class="keyword">if</span>(t-&gt;l==t-&gt;r)&#123;</span><br><span class="line">		<span class="keyword">if</span>(t-&gt;mx &gt; val) <span class="keyword">return</span> t-&gt;l<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">return</span> t-&gt;l;</span><br><span class="line">	&#125;</span><br><span class="line">	apply(t-&gt;lc);</span><br><span class="line">	<span class="keyword">if</span>(t-&gt;lc-&gt;mx &gt; val) <span class="keyword">return</span> query(t-&gt;lc,val);</span><br><span class="line">	<span class="keyword">return</span> query(t-&gt;rc,val-t-&gt;lc-&gt;sum);	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio 	</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">	node *t = <span class="keyword">new</span> node();</span><br><span class="line">	<span class="keyword">char</span> q;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; q)&#123;</span><br><span class="line">		<span class="keyword">if</span>(q==<span class="string">&#x27;E&#x27;</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(q==<span class="string">&#x27;Q&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">int</span> val;</span><br><span class="line">			<span class="built_in">cin</span> &gt;&gt; val;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; query(t,val) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">int</span> l,r,d;</span><br><span class="line">			<span class="built_in">cin</span> &gt;&gt; l &gt;&gt; r &gt;&gt; d;</span><br><span class="line">			modify(t,l,r,d);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Codeforces</tag>
        <tag>線段樹</tag>
        <tag>IOI</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 臺北市資訊學科能力競賽</title>
    <url>/2020/09/30/TIOJ-2019-Taipei-Contest/</url>
    <content><![CDATA[<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>因為11月要去比北市賽<br><br>今天解了去年北市賽的題目 <br><br>（早自習30分鐘+午休30分鐘+四節下課10分鐘+無數的上課思考）<br><br>不過五題只解了四題 第五題還沒看 <br><br>距離北市賽 還有37天！ 希望有機會進全國賽</p>
<p>題目:<br><a href="https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=ZGVmYXVsdGRvbWFpbnxobGZnb25nenVvc2hpfGd4OjRjMTVmYmY2NzcwY2VlODM">https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=ZGVmYXVsdGRvbWFpbnxobGZnb25nenVvc2hpfGd4OjRjMTVmYmY2NzcwY2VlODM</a></p>
<a id="more"></a>
<h2 id="第一題：-出戰順序-Arrangement"><a href="#第一題：-出戰順序-Arrangement" class="headerlink" title="第一題： 出戰順序 (Arrangement)"></a>第一題： 出戰順序 (Arrangement)</h2><p>TIOJ 2169:<br><a href="https://tioj.ck.tp.edu.tw/problems/2169">https://tioj.ck.tp.edu.tw/problems/2169</a></p>
<p><img src="https://i.imgur.com/BZrx9Sy.png" alt=""></p>
<p>有練過不少題目的人應該都知道有個問題叫做「<a href="https://zh.wikipedia.org/zh-tw/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98">約瑟夫斯問題</a>」</p>
<p>這個問題有很多不同的解法 <br><br>有的人可能用Treap之類的資料結構來達到 $O(n log n)$的解 <br><br>不過這個問題有線性的 $O(n)$ 解<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">    tmp = (tmp+t)%i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>題目的要求為 給予一個最後的數字 問 $m$ 應為多少 <br><br>這題的範圍是 $1 \leq n,k \leq 10^4$ <br><br>而 $m$ 則為 $2 \leq m \leq 3 \times 10^4$ <br><br>因此我們可以暴搜找出 $m$ 值</p>
<p>複雜度: $O(30000 \times k)$</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> n,k;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> t = <span class="number">2</span>;t &lt;= <span class="number">30000</span>;t++)&#123;</span><br><span class="line">		<span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">			tmp = (tmp+t)%i;</span><br><span class="line">		&#125;</span><br><span class="line">		tmp++;</span><br><span class="line">		<span class="keyword">if</span>(tmp==k)&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; t &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="第二題：地圖編修-Map"><a href="#第二題：地圖編修-Map" class="headerlink" title="第二題：地圖編修 (Map)"></a>第二題：地圖編修 (Map)</h2><p>TIOJ 2170:<br><a href="https://tioj.ck.tp.edu.tw/problems/2170">https://tioj.ck.tp.edu.tw/problems/2170</a></p>
<p><img src="https://i.imgur.com/WZUAbOc.png" alt=""></p>
<p>這一題第一眼看上去，以為是向量投影 <br><br>不過仔細想一想，這題從題目的說明上看來 <br><br>其實只要解模方程 題目給了 $n$ 個方程式 <br></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 101     2 101</span><br><span class="line">5 3    &#x3D;&gt; 5 3</span><br><span class="line">3 1       3x 1x</span><br><span class="line">2 2       2y 2y</span><br></pre></td></tr></table></figure>
<p>因此我們有了一個一元模方程組</p>
<script type="math/tex; mode=display">
\left\{
\begin{array}{ll}
3x+2y=5 \text{ (mod 101)} \\\\ 
1x+2y=3 \text{ (mod 101)}
\end{array} 
\right.</script><p>要用電腦解方程式有很多作法</p>
<p>用矩陣的解法</p>
<p>$\begin{bmatrix}3 &amp; 2 \\ 1 &amp; 2\end{bmatrix} \begin{bmatrix}x \\ y \end{bmatrix} = \begin{bmatrix}5 \\ 3 \end{bmatrix}$</p>
<p>或者<a href="https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84#%E5%85%8B%E6%8B%89%E7%91%AA%E5%AE%9A%E7%90%86">克拉瑪公式</a></p>
<p>以及這題需要使用的<a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E6%96%AF%E6%B6%88%E5%8E%BB%E6%B3%95">高斯消去法</a><br><br>高斯消去法是基於加減消去法 運用矩陣的列運算來求解</p>
<p>$\begin{bmatrix}3(x) &amp; 2(y) &amp; 5 \\ 1(x) &amp; 2(y) &amp; 3 \end{bmatrix}$</p>
<p>只要我們能夠用列運算將原本的矩陣化為</p>
<p>$\begin{bmatrix}1(x) &amp; 0(y) &amp; x \\ 0(x) &amp; 1(y) &amp; y \end{bmatrix}$</p>
<p>最後一行就會是所有我們要求解的變數了<br><br>而使用高斯消去法解模方程就只是在運算時去執行模運算而已 <br><br>至於如何進行列運算來轉化矩陣 就是留給讀者的練習了<br></p>
<p>複雜度： $O(n^3logm)$ （備註：$logm$是因為求模逆元）</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> MOD;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fastpow</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(p)&#123;</span><br><span class="line">		<span class="keyword">if</span>(p&amp;<span class="number">1</span>) res = (res * n)%MOD;</span><br><span class="line">		n = (n*n)%MOD;</span><br><span class="line">		p&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[N][N];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; MOD;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n;j++)&#123;</span><br><span class="line">			<span class="built_in">cin</span> &gt;&gt; arr[j][n-i+<span class="number">2</span>]; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!arr[i][i])&#123;</span><br><span class="line">			<span class="comment">//若arr[i][i]為0 與其他行交換 將arr[i][i]變為其他數字</span></span><br><span class="line">			<span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">			<span class="keyword">int</span> row = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>;j &lt;= n+<span class="number">1</span>;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(arr[j][i])&#123;</span><br><span class="line">					ok = <span class="literal">false</span>;</span><br><span class="line">					row = j;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(ok) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n+<span class="number">1</span>;j++)&#123;</span><br><span class="line">				swap(arr[i][j],arr[row][j]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> tmp = arr[i][i];</span><br><span class="line">        <span class="comment">//將這一行同除arr[i][i] 使arr[i][i]變為1</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = i;j &lt;= n+<span class="number">1</span>;j++)&#123;</span><br><span class="line">			arr[i][j] = arr[i][j] * fastpow(tmp,MOD<span class="number">-2</span>)%MOD;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line">			tmp = arr[j][i];</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= n+<span class="number">1</span>;k++)&#123;</span><br><span class="line">				arr[j][k] = ((arr[j][k]%MOD - arr[i][k]%MOD*tmp%MOD)%MOD+MOD)%MOD;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = n;i;i--) <span class="built_in">cout</span> &lt;&lt; (arr[i][n+<span class="number">1</span>]+MOD)%MOD &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="第三題：打卡遊戲-Checkin"><a href="#第三題：打卡遊戲-Checkin" class="headerlink" title="第三題：打卡遊戲 (Checkin)"></a>第三題：打卡遊戲 (Checkin)</h2><p>TIOJ 2171:<br><a href="https://tioj.ck.tp.edu.tw/problems/2171">https://tioj.ck.tp.edu.tw/problems/2171</a></p>
<p><img src="https://i.imgur.com/QdTEMLE.png" alt=""></p>
<p>圖論題<br>這題目其實我看了一陣子才理解<br>題目給的是一張有$A+B$ 個節點與 $k$ 條邊的圖（不一定完全連通）<br>而 $S,M$ 的數值對於這題來說其實完全用不到<br>要用最少車資完成遊戲 我們可以推得 </p>
<script type="math/tex; mode=display">車資=搭乘車數量\times S + M \times 距離和</script><p>距離和不論怎麼做都不會改變 <br><br>因此我們可以將題目的「最少車資」改為「搭乘最少數量」</p>
<p>而我們要找尋搭乘的最少數量 <br><br>我們可以很輕易的知道 如果有 $n$ 個連通塊 <br><br>我們至少要做 $n$ 次才能走完所有邊 <br><br>而每個連通塊需要的次數 我們可以由「<a href="https://zh.wikipedia.org/wiki/%E4%B8%80%E7%AC%94%E7%94%BB%E9%97%AE%E9%A2%98#%E5%AE%9A%E7%90%86%E4%BA%8C">一筆畫定理</a>」得知</p>
<p><img src="https://i.imgur.com/TBNrJy4.png" alt=""></p>
<p>因此本題的答案就是</p>
<script type="math/tex; mode=display">\Sigma_{每個連通塊} \text{ }min(奇數節點/2,1)</script><p>複雜度 $O(A+B+K)$<br>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1005</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; adj[N];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>, visited[N];</span><br><span class="line"><span class="keyword">int</span> odd = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	visited[u] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(adj[u].size()&amp;<span class="number">1</span>) odd++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> v : adj[u])&#123;</span><br><span class="line">		<span class="keyword">if</span>(!visited[v]) dfs(v);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> a,b,s,m,k;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; s &gt;&gt; m &gt;&gt; k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; k;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> u,v,w;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">		<span class="comment">//v starts from a+1</span></span><br><span class="line">		adj[u].push_back(a+v);</span><br><span class="line">		adj[a+v].push_back(u);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= a+b;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(visited[i]||adj[i].size()==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">		odd = <span class="number">0</span>;</span><br><span class="line">		dfs(i);</span><br><span class="line">		ans += max(odd/<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="第四題：物種演化-Evolution"><a href="#第四題：物種演化-Evolution" class="headerlink" title="第四題：物種演化 (Evolution)"></a>第四題：物種演化 (Evolution)</h2><p>TIOJ 2172:<br><a href="https://tioj.ck.tp.edu.tw/problems/2172">https://tioj.ck.tp.edu.tw/problems/2172</a></p>
<p><img src="https://i.imgur.com/CvUtQcz.png" alt=""></p>
<p>這題是非常裸的樹上兩點最短距離</p>
<p>就用倍增法或樹壓平找LCA<br><br>之後用 $d = dep[u] - 2*dep[lca(u,v)] + dep[v]$就是答案</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; adj[N];</span><br><span class="line"><span class="keyword">int</span> dep[N], fa[N][<span class="number">25</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> par)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> v : adj[u])&#123;</span><br><span class="line">		<span class="keyword">if</span>(v==par) <span class="keyword">continue</span>;</span><br><span class="line">		dep[v] = dep[u]+<span class="number">1</span>;</span><br><span class="line"> 		fa[v][<span class="number">0</span>] = u;</span><br><span class="line">		dfs(v,u);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(dep[x] &lt; dep[y]) swap(x,y);</span><br><span class="line">	<span class="keyword">int</span> diff = dep[x]-dep[y];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">20</span>;~i;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;i)&amp;diff)&#123;</span><br><span class="line">			x = fa[x][i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(x==y)&#123;</span><br><span class="line">		<span class="keyword">return</span> x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">20</span>;~i;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span>(fa[x][i]!=fa[y][i])&#123;</span><br><span class="line">			x = fa[x][i];</span><br><span class="line">			y = fa[y][i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	x = fa[x][<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> u,v;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">		u++,v++;</span><br><span class="line">		adj[u].push_back(v);</span><br><span class="line">		adj[v].push_back(u);</span><br><span class="line">	&#125;</span><br><span class="line">	dep[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">	dfs(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">20</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n;j++)&#123;</span><br><span class="line">			fa[j][i] = fa[fa[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(m--)&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">		x++,y++;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; dep[x]+dep[y]<span class="number">-2</span>*dep[lca(x,y)] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="第五題：搜集寶藏"><a href="#第五題：搜集寶藏" class="headerlink" title="第五題：搜集寶藏"></a>第五題：搜集寶藏</h2><p>TIOJ 2173:<br><a href="https://tioj.ck.tp.edu.tw/problems/2173">https://tioj.ck.tp.edu.tw/problems/2173</a></p>
<p>待補</p>
]]></content>
      <tags>
        <tag>TIOJ</tag>
        <tag>北市賽</tag>
        <tag>約瑟夫斯問題</tag>
        <tag>圖論</tag>
        <tag>高斯消去法</tag>
        <tag>LCA</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces Round &amp;#35;673 (Div.2)</title>
    <url>/2020/09/29/Codeforces-Round-673-Div-2/</url>
    <content><![CDATA[<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>這場只答對三題pA, pB, pC<br>所以掉分了(´Д` )<br>1793 -&gt; 1781<br><a id="more"></a></p>
<h2 id="Problem-A-Copy-paste"><a href="#Problem-A-Copy-paste" class="headerlink" title="Problem A - Copy-paste"></a>Problem A - Copy-paste</h2><p>給予一個 $n$ 項的陣列以及一個 $k$ 值</p>
<p>你能挑選  $1\leq i,j \leq n$<br>並讓 $a_j = a_j + a_i$</p>
<p>問最多能做幾次</p>
<p>這題我一看到是直接砸priority_queue<br>不過其實這題很簡單的做法是<br>選取 $min(a_0,a_1,…,a_n)$ 的值<br>並用該值去增加其他項的數值</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,k;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">priority_queue</span>&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt;&gt; pq;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,tmp;i &lt; n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; tmp;</span><br><span class="line">		pq.push(tmp);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(pq.top()&lt;=k)&#123;</span><br><span class="line">		<span class="keyword">int</span> a = pq.top(); pq.pop();</span><br><span class="line">		<span class="keyword">int</span> b = pq.top(); pq.pop();</span><br><span class="line">		<span class="keyword">if</span>(a+b &lt;= k)&#123;</span><br><span class="line">			cnt++;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		pq.push(a+b);</span><br><span class="line">		pq.push(a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> t = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span>(t--) solve();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Problem-B-Two-Arrays"><a href="#Problem-B-Two-Arrays" class="headerlink" title="Problem B - Two Arrays"></a>Problem B - Two Arrays</h2><p>題意是說<br>給予一個 $n$ 項的陣列與一個 $T$ 值<br>你可以將整個陣列塗兩種顏色<br>使得同一個顏色當中 任兩個元素總和為 $T$ 的數量最小化</p>
<p>這題我一開始想錯 砸了兩次WA 不過這題非常簡單<br>首先 我們先掃過每一個元素 $a_i$<br>決定是否將 $a_i$ 塗色<br>若我們尚未塗過 $T-a_i$ 我們就將 $a_i$ 塗色<br>這個題目有一個小陷阱<br>那就是當元素可重複且元素為 $\frac{t}{2}$<br>我們就必須把同個元素塗上不同的顏色<br>否則同元素放在同一顏色當中反而更好</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; c,cnt;</span><br><span class="line">	<span class="keyword">int</span> n,t;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; t;</span><br><span class="line">	<span class="keyword">int</span> arr[n];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x : arr) <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">		cnt[arr[i]]++;</span><br><span class="line">		<span class="keyword">if</span>(!c[t-arr[i]])</span><br><span class="line">			c[arr[i]] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i]==t-arr[i]&amp;&amp;cnt[arr[i]]%<span class="number">2</span>==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; (c[arr[i]]^<span class="number">1</span>) &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; c[arr[i]] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		cnt[arr[i]]--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> t = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span>(t--) solve();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Problem-C-k-Amazing-Numbers"><a href="#Problem-C-k-Amazing-Numbers" class="headerlink" title="Problem C - k-Amazing Numbers"></a>Problem C - k-Amazing Numbers</h2><p>這題是說給予一個 $n$ 項的陣列<br>問在每一個長度為 $k$ 的子陣列當中 都有出現的最小元素<br>並依序從 $k=1 \sim k=n$ 分別輸出最小元素</p>
<p>這題我的做法是紀錄 $1 \sim n$ 相隔最久都沒有出現重複的長度<br>之後就能用這個去得到答案了<br>由於出現在每個長度為 $k$ 的子陣列的元素 一定出現在長度為 $k+1$的子陣列 我們也需要用 $k$的元素來更新 $k+1$的元素</p>
<p>程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">int</span> g = <span class="number">0</span>, mi = INT_MAX;</span><br><span class="line">	<span class="keyword">int</span> arr[n+<span class="number">1</span>] = &#123;&#125;;</span><br><span class="line">	<span class="keyword">int</span> ans[n+<span class="number">1</span>] = &#123;&#125;;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, tmp;i &lt; n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; tmp;</span><br><span class="line">		mi = min(mi,tmp);</span><br><span class="line">		ans[tmp] = max(ans[tmp],(arr[tmp]+g + (ans[tmp]==<span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)));</span><br><span class="line">		arr[tmp] = -i;</span><br><span class="line">		g++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">pr</span><span class="params">(n+<span class="number">2</span>,<span class="number">1e9</span>+<span class="number">7</span>)</span></span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">		ans[i] = max(ans[i],arr[i]+g);</span><br><span class="line">		pr[ans[i]] = min(i,pr[ans[i]]);</span><br><span class="line">	&#125;</span><br><span class="line">	pr[n] = mi;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">		pr[i+<span class="number">1</span>] = min(pr[i+<span class="number">1</span>],pr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(pr[i]==<span class="number">1e9</span>+<span class="number">7</span>) <span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; pr[i] &lt;&lt; <span class="string">&quot; &quot;</span>; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> t = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span>(t--) solve();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Problem-D-Make-Them-Equal"><a href="#Problem-D-Make-Them-Equal" class="headerlink" title="Problem D - Make Them Equal"></a>Problem D - Make Them Equal</h2><p>這題真的要說的話 難度並不高<br><br>不過我一直砸 伴隨而來的是無止盡的WA<br><br><img src="https://i.imgur.com/5QLQW5q.png" alt=""><br>度的 就是如此的可撥(／‵Д′)／~ ╧╧ </p>
<p>這題的題目是說給予一個n項的陣列<br><br>你可以進行操作<br><br>$\Rightarrow$ 選擇三個整數 $i,j,x$<br><br>$\Rightarrow$ 將$a_j = a_j + i\times x$，$a_i = a_i - i \times x$<br><br>問是否能在 $3n$ 次操作內 使得陣列中的所有元素相等</p>
<p>這題其實 $3n$ 是非常寬的一個數字 <br><br>而這題的作法其實非常簡單<br><br>我們可以把題目的操作理解成 $\Rightarrow$ 選擇 $a_i$ 並將 $i$ 的倍數轉移至 $a_j$</p>
<p>我們可以很輕易想到 如果要使得每個元素相等 代表所有元素應變為他們的算術平均數<br><br>因此 當總和不是 $n$ 的倍數時 我們就可以排除這個解</p>
<p>接下來的作法就非常簡單了<br><br>由於我們不容易想應該如何將 $i$ 的倍數轉移<br><br>如果我們可以先將所有的數字先集中到 $a_1$ 之後　<br><br>再由 $a_1$ 去分配給其他元素 這就會是一個非常好的解法了</p>
<p>然而，說來簡單 如何將其他元素都集中到 $a_1$ 呢？</p>
<p>題目有一個條件 $1 \leq a_i \leq 10^5$ <br><br>既然 $a_i$ 一定大於0 我們可以從 $a_2$ 開始分別將數字轉移至 $a_1$</p>
<p>當我們要轉移 $a_i$ 的值到 $a_1$ 時　<br><br>我們會先將 $a_i$ 的值變為 $i$ 的倍數　<br><br>這樣我們就可以直接轉移到 $a_1$ 身上了　</p>
<p>附上程式碼<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">int</span> arr[n];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; arr[i];</span><br><span class="line">		sum += arr[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(sum%n)&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sum/=n;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">array</span>&lt;<span class="keyword">int</span>,3&gt;&gt; v;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i]%(i+<span class="number">1</span>))&#123;</span><br><span class="line">			v.push_back(&#123;<span class="number">1</span>,i+<span class="number">1</span>,i+<span class="number">1</span>-arr[i]%(i+<span class="number">1</span>)&#125;);</span><br><span class="line">			arr[<span class="number">0</span>] -= i+<span class="number">1</span>-arr[i]%(i+<span class="number">1</span>);</span><br><span class="line">			arr[i] += i+<span class="number">1</span>-arr[i]%(i+<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		v.push_back(&#123;i+<span class="number">1</span>,<span class="number">1</span>,arr[i]/(i+<span class="number">1</span>)&#125;);</span><br><span class="line">		arr[<span class="number">0</span>] += (arr[i]/(i+<span class="number">1</span>))*(i+<span class="number">1</span>);</span><br><span class="line">		arr[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)&#123;</span><br><span class="line">		v.push_back(&#123;<span class="number">1</span>,i+<span class="number">1</span>,sum&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; v.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> x : v)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> y : x)&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; y &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	fastio</span><br><span class="line">	<span class="keyword">int</span> t = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span>(t--) solve();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Problem-E-XOR-Inverse"><a href="#Problem-E-XOR-Inverse" class="headerlink" title="Problem E - XOR Inverse"></a>Problem E - XOR Inverse</h2><p>待補</p>
]]></content>
      <tags>
        <tag>Codeforces</tag>
        <tag>Math</tag>
        <tag>Greedy</tag>
        <tag>藍牌</tag>
      </tags>
  </entry>
</search>
